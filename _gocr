#compdef gocr


_arguments -s '-a[set  value for certainty of recognition (0..100; default: 95), characters with a higher certainty are accepted, char‐]'\
  '-C[only recognise characters from string, this is a filter function in cases where the interest is only to a part of the]'\
  '-c[only verbose output of characters from string to stderr, more output is  generated  for  all  characters  within  the]'\
  '-d[set dust size in pixels (clusters smaller than this are removed), 0 means no clusters are removed, the default is  -1]'\
  '-e[send errors to file instead of stderr or to stdout if file is a dash]'\
  '-f[output format of the recognized text (ISO8859_1 TeX HTML XML UTF8 ASCII), XML will also output position and probabil‐]'\
  '-h[show usage information]'\
  '-i[read input from file (or stdin if file is a single dash)]'\
  '-l[set  grey level to level (0<160<=255, default: 0 for autodetect), darker pixels belong to characters, brighter pixels]'\
  '-m[set oprational mode; mode is a bitfield (default: 0)]'\
  '-n[if bool is non-zero, only recognise numbers (this is now obsolete, use -C "0123456789")]'\
  '-o[send output to file instead of stdout]'\
  '-p[database  path,  a final slash must be included, default is ./db/, this path will be populated with images of learned]'\
  '-s[set  spacewidth between words in units of dots (default: 0 for autodetect), wider widths are interpreted as word spa‐]'\
  '-u[output this string for every unrecognized character (default is "_")]'\
  '-v[be verbose to stderr; verbosity is a bitfield]'\
  '-x[progress  output  to file (file can be a file name, a fifo name or a file descriptor 1...255), this is useful for GUI]'\
  '*:filename:_files'
