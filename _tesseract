#compdef tesseract
# zsh completions for tesseract 4.0
# Copyright © 2017 Henrik Lindgren
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.



local -a arguments
local noargs
local curcontext="$curcontext"
# typeset -A opt_args

if [[ ! -d $TESSDATA_PREFIX ]] ; then
  TESSDATA_PREFIX="/usr/share/tesseract-ocr"
fi

noargs="( --print-parameters --list-langs -v --help-psm --help-oem --help -h --version )"

_arguments -C '1:input file:_files'\
  '2:output base:_files'\
  ':config files:->config'\
  $noargs'--tessdata-dir[Specify the location of tessdata path]:tessdata path:{_path_files -/ }'\
  $noargs'--user-words[Location of user words file]:user words:->userwords'\
  $noargs'--user-patterns[Location of user patterns file]:user patterns:->userpatterns'\
  $noargs'-l[Specify language used for OCR]:language:->language'\
  $noargs'-c[Set value for config variables]:config:->paramcomp'\
  $noargs'--psm[Specify page segmentation mode]:psm:((
    0\:Orientation\ and\ script\ detection\ OSD\ only\
    1\:Automatic\ page\ segmentation\ with\ OSD\
    2\:Automatic\ page\ segmentation,\ but\ no\ OSD,\ or\ OCR\
    3\:Fully\ automatic\ page\ segmentation,\ but\ no\ OSD\ Default\
    4\:Assume\ a\ single\ column\ of\ text\ of\ variable\ sizes\
    5\:Assume\ a\ single\ uniform\ block\ of\ vertically\ aligned\ text\
    6\:Assume\ a\ single\ uniform\ block\ of\ text\
    7\:Treat\ the\ image\ as\ a\ single\ text\ line\
    8\:Treat\ the\ image\ as\ a\ single\ word\
    9\:Treat\ the\ image\ as\ a\ single\ word\ in\ a\ circle\
    10\:Treat\ the\ image\ as\ a\ single\ character\
    11\:Sparse\ text.\ Find\ as\ much\ text\ as\ possible\ in\ no\ particular\ order\
    12\:Sparse\ text\ with\ OSD\
    13\:Raw\ line.\ Treat\ the\ image\ as\ a\ single\ text\ line,\ bypassing\ hacks\ that\ are\ Tesseract-specific\
  ))'\
  $noargs'--oem[Specify OCR Engine mode]:oem:((
    0\:Original\ Tesseract\ only\
    1\:Neural\ nets\ LSTM\ only\
    2\:Tesseract\ +\ LSTM\
    3\:Default\ based\ on\ what\ is\ available\
  ))'\
  '(- 1 :)'{-h,--help}'[Show this help message]'\
  '(- 1 :)--help-psm[Show page segmentation modes]'\
  '(- 1 :)--help-oem[Show OCR modes]'\
  '(- 1 :)'{-v,--version}'[Show version information]'\
  '(- 1 :)--list-langs[List available languages for tesseract engine]:tessdata path:(( --tessdata-dir\:tessdata\ dir ))'\
  '(- 1 :)--print-parameters[Print tesseract parameters to stdout]'

case "$state" in
    userwords)
        _alternative ":user words:_files $TESSDATA_PREFIX/**/???.user-words"\
            'files:current files:_files'
        ;;
    userpatterns)
        _alternative ":user patterns:_files $TESSDATA_PREFIX/**/???.user-patterns"\
            'files:current files:_files -g ???.user-patterns'
        ;;
    input)
        # _alternative ':input:infile:(( stdin\:"read data from stdin" ))' ':input:infile:_files'
        _files
        ;;
    output)
        # _alternative 'output:output base:(( stout\:"write data to stdout" ))' 'output:output base:_files'
        _files
        ;;
    config)
        local -a configfile
        local curcontext="$curcontext"
        configfile=(
            'hocr:Output in hOCR format'
            'pdf:If inovked with \[-psm 3\] outputs image and a separate searchable text layer with the recognized text underneath'
            'tsv:Output in tsv format'
            )
            _alternative 'outputformat:output format:{ _describe -V "conffiles" configfile }'\
                "files:config files:{_files -W $TESSDATA_PREFIX/tessdata/**configs }"
        ;;
    language)
        local curcontext="$curcontext"
        local -a lang
        lang=( $( tesseract --list-langs 2> /dev/null | sed '1d') )
        _values -s + 'flags' $lang
        ;;
    psmcomp)
        local curcontext="$curcontext"
        local -a psm
        psm=(
            '0:Orientation and script detection OSD only'
            '1:Automatic page segmentation with OSD'
            '2:Automatic page segmentation, but no OSD, or OCR'
            '3:Fully automatic page segmentation, but no OSD Default'
            '4:Assume a single column of text of variable sizes'
            '5:Assume a single uniform block of vertically aligned text'
            '6:Assume a single uniform block of text'
            '7:Treat the image as a single text line'
            '8:Treat the image as a single word'
            '9:Treat the image as a single word in a circle'
            '10:Treat the image as a single character'
            '11:Sparse text. Find as much text as possible in no particular order'
            '12:Sparse text with OSD'
            '13:Raw line. Treat the image as a single text line, bypassing hacks that are Tesseract-specific'
        )
        _describe -V 'page segmentation mode' psm
        ;;
    oemcomp)
        local curcontext="$curcontext"
        local -a oem
        oem=(
         '0:Original Tesseract only'
         '1:Neural nets LSTM only'
         '2:Tesseract + LSTM'
         '3:Default based on what is available'
          )
          _describe 'OCR mode' oem
        ;;
    paramcomp)
        #parame=$(tesseract --print-parameters | sed -re "1,3d; s/(\w+)		/\1	\1	/g ; s/([)(\"\'\`\´])//g; s/(\w+)\t(.+)\t(.+)/'\1=[\3 \\\[\2\\\]]:val:( \2 )'/g")
        local -a parame
        parame=(
            'allow_blob_division=:[Use divisible blobs]:nr:( 1 )'
            'ambigs_debug_level=:[Debug level for unichar]:nr:( 0 )'
            'applybox_debug=:[Debug]:nr:( 1 )'
            'applybox_exposure_pattern=:[Exposure value follows this pattern in the image filename. The name of the image files are expected to be in the form lang.fontname.exp num.tif.exp]'
            'applybox_learn_chars_and_char_frags_mode=:[Learn both character fragments as is done in the special low exposure mode as well as unfragmented characters]:nr:(0)'
            'applybox_learn_ngrams_mode=:[Each bounding box is assumed to contain ngrams. Only learn the ngrams whose outlines overlap horizontally]:nr:(0)'
            'applybox_page=:[Page number to apply boxes]:nr:( 0 )'
            'assume_fixed_pitch_char_segment=:[include fixedpitch heuristics in char]:nr:( 0 )'
            'bestrate_pruning_factor=:[Multiplying factor of current best rate to prune other]:nr:( 2 )'
            'bidi_debug=:[Debug level for]:nr:( 0 )'
            'bland_unrej=:[unrej potential with no]:nr:( 0 )'
            'certainty_scale=:[Certainty scaling]:nr:( 0 )'
            'certainty_scale=:[Certainty scaling]:nr:( 0 )'
            'chop_center_knob=:[Split center adjustment]:nr:( 0.15 )'
            'chop_centered_maxwidth=:[Width of smaller chopped blobs above which we dont care that a chop is not near the center.]:nr:( 0 )'
            'chop_debug=:[Chop]:nr:( 0 )'
            'chop_enable=:[Chop]:nr:( 1 )'
            'chop_good_split=:[Good split]:nr:( 0 )'
            'chop_inside_angle=:[Min Inside Angle]:nr:( 0 )'
            'chop_min_outline_area=:[Min Outline]:nr:( 0 )'
            'chop_min_outline_points=:[Min Number of Points on]:nr:( 6 )'
            'chop_new_seam_pile=:[Use new]:nr:( 1 )'
            'chop_ok_split=:[OK split]:nr:( 0 )'
            'chop_overlap_knob=:[Split overlap adjustment]:nr:( 0.9 )'
            'chop_same_distance=:[Same]:nr:( 2 )'
            'chop_seam_pile_size=:[Max number of seams in]:nr:( 0 )'
            'chop_sharpness_knob=:[Split sharpness adjustment]:nr:( 0.06 )'
            'chop_split_dist_knob=:[Split length adjustment]:nr:( 0.5 )'
            'chop_split_length=:[Split]:nr:( 0 )'
            'chop_vertical_creep=:[Vertical]:nr:( 0 )'
            'chop_width_change_knob=:[Width change]:nr:( 5 )'
            'chop_x_y_weight=:[X / Y  length]:nr:( 3 )'
            'chs_leading_punct:[Leading punctuation]:pkt:( \: )'
            'chs_trailing_punct1=:[1st Trailing punctuation]:pkt:( . , \; = \: . \!)'
            'chs_trailing_punct2=:[2nd Trailing punctuation]'
            'classify_adapt_feature_threshold=:[Threshold for good features during adaptive]:nr:( 0 )'
            'classify_adapt_proto_threshold=:[Threshold for good protos during adaptive]:nr:( 0 )'
            'classify_adapted_pruning_factor=:[Prune poor adapted results this much worse than best result]:nr:( 2.5 )'
            'classify_adapted_pruning_threshold=:[Threshold at which classify_adapted_pruning_factor]:nr:( 1 )'
            'classify_bln_numeric_mode=:[Assume the input is numbers ]:nr:( 09.0 )'
            'classify_char_norm_range=:[Character Normalization Range ...]:nr:( 0.2 )'
            'classify_character_fragments_garbage_certainty_threshold=:[Exclude fragments that do not look like whole characters from training and]:nr:( 3 )'
            'classify_class_pruner_multiplier=:[Class Pruner Multiplier 0255      ]:nr:( 5 )'
            'classify_class_pruner_threshold=:[Class Pruner Threshold]:nr:( 9 )'
            'classify_cp_angle_pad_loose=:[Class Pruner Angle Pad]:nr:( 5 )'
            'classify_cp_angle_pad_medium=:[Class Pruner Angle Pad]:nr:( 0 )'
            'classify_cp_angle_pad_tight=:[CLass Pruner Angle Pad]:nr:( 0 )'
            'classify_cp_cutoff_strength=:[Class Pruner CutoffStrength]:nr:(7)'
            'classify_cp_end_pad_loose=:[Class Pruner End Pad Loose]:nr:( 0.5 )'
            'classify_cp_end_pad_medium=:[Class Pruner End Pad Medium]:nr:( 0.5 )'
            'classify_cp_end_pad_tight=:[Class Pruner End Pad Tight]:nr:( 0.5 )'
            'classify_cp_side_pad_loose=:[Class Pruner Side Pad Loose]:nr:( 2.5 )'
            'classify_cp_side_pad_medium=:[Class Pruner Side Pad Medium]:nr:( 1.2 )'
            'classify_cp_side_pad_tight=:[Class Pruner Side Pad Tight]:nr:( 0.6 )'
            'classify_debug_character_fragments=:[Bring up graphical debugging windows for fragments]:nr:( 0 )'
            'classify_debug_level=:[Classify debug]:nr:( 0 )'
            'classify_enable_adaptive_debugger=:[Enable match]:nr:( 0 )'
            'classify_enable_adaptive_matcher=:[Enable adaptive]:nr:( 1 )'
            'classify_enable_learning=:[Enable adaptive]:nr:( 1 )'
            'classify_font_name=:[Default font name to be used in trainingUnknownFont]:font'
            'classify_integer_matcher_multiplier=:[Integer Matcher Multiplier  0255  ]:nr:( 0 )'
            'classify_learn_debug_str=:[Class str to debug learningclassify_learn_debug_str]:str:'
            'classify_learning_debug_level=:[Learning Debug Level]:debug level:( 0 )'
            'classify_max_certainty_margin=:[Veto difference between classifier certainties]:nr:( 5.5 )'
            'classify_max_norm_scale_x=:[Max char xnorm scale ...]:nr:( 0.325 )'
            'classify_max_norm_scale_y=:[Max char ynorm scale ...]:nr:( 0.325 )'
            'classify_max_rating_ratio=:[Veto ratio between classifier ratings]:nr:( 1.5 )'
            'classify_max_slope=:[Slope above which lines are called vertical]:nr:( 2.41421 )'
            'classify_min_norm_scale_x=:[Min char xnorm scale ]:nr:(0)'
            'classify_min_norm_scale_y=:[Min char ynorm scale ]:nr:(0)'
            'classify_min_slope=:[Slope below which lines are called horizontal]:nr:( 0.414214 )'
            'classify_misfit_junk_penalty=:[Penalty to apply when a nonalnum is vertically out of its expected textline]:nr:( 0 )'
            'classify_nonlinear_norm=:[Nonlinear strokedensity]:nr:( 0 )'
            'classify_norm_adj_curl=:[Norm adjust curl ...]:nr:(2)'
            'classify_norm_adj_midpoint=:[Norm adjust midpoint ...]:nr:( 2 )'
            'classify_norm_method=:[Normalization Method   ...]:nr:(1)'
            'classify_num_cp_levels=:[Number of Class Pruner]:nr:( 3 )'
            'classify_pico_feature_length=:[Pico Feature Length]:nr:( 0.05 )'
            'classify_pp_angle_pad=:[Proto Pruner Angle]:nr:( 5 )'
            'classify_pp_end_pad=:[Proto Prune End Pad]:nr:( 0.5 )'
            'classify_pp_side_pad=:[Proto Pruner Side Pad]:nr:( 2.5 )'
            'classify_save_adapted_templates=:[Save adapted templates to a]:nr:( 0 )'
            'classify_training_file=:[Training fileMicroFeatures]:file:_files'
            'classify_use_pre_adapted_templates=:[Use preadapted classifier]:nr:( 0 )'
            'conflict_set_I_l_1=:[Il1 conflict set Il]'
            'crunch_accept_ok=:[Use acceptability in]:nr:( 1 )'
            'crunch_debug=:[As it]:nr:( 0 )'
            'crunch_del_cert=:[POTENTIAL crunch cert lt]:nr:( 0 )'
            'crunch_del_high_word=:[Del if word gt xht x this above bl]:nr:( 1.5 )'
            'crunch_del_low_word=:[Del if word gt xht x this below bl]:nr:( 0.5 )'
            'crunch_del_max_ht=:[Del if word ht gt xht x]:nr:( 3 )'
            'crunch_del_min_ht=:[Del if word ht lt xht x this]:nr:( 0.7 )'
            'crunch_del_min_width=:[Del if word width lt xht x]:nr:( 3 )'
            'crunch_del_rating=:[POTENTIAL crunch rating lt]:nr:( 0 )'
            'crunch_early_convert_bad_unlv_chs=:[Take out ~^ early]:nr:(0)'
            'crunch_early_merge_tess_fails=:[Before word crunch]:nr:(1)'
            'crunch_include_numerals=:[Fiddle alpha]:nr:( 0 )'
            'crunch_leave_accept_strings=:[Dont pot crunch sensible]:nr:( 0 )'
            'crunch_leave_lc_strings=:[Dont crunch words with long lower case]:nr:( 4 )'
            'crunch_leave_ok_strings=:[Dont touch sensible]:nr:( 1 )'
            'crunch_leave_uc_strings=:[Dont crunch words with long lower case]:nr:( 4 )'
            'crunch_long_repetitions=:[Crunch words with long]:nr:( 3 )'
            'crunch_poor_garbage_cert=:[crunch garbage cert lt]:nr:( 9 )'
            'crunch_poor_garbage_rate=:[crunch garbage rating lt]:nr:( 0 )'
            'crunch_pot_garbage=:[POTENTIAL crunch]:nr:( 1 )'
            'crunch_pot_indicators=:[How many potential indicators]:nr:( 1 )'
            'crunch_pot_poor_cert=:[POTENTIAL crunch cert lt]:nr:( 8 )'
            'crunch_pot_poor_rate=:[POTENTIAL crunch rating lt]:nr:( 0 )'
            'crunch_rating_max=:[For adj length in rating per]:nr:( 0 )'
            'crunch_small_outlines_size=:[Small if lt xht x this]:nr:( 0.6 )'
            'crunch_terrible_garbage=:[As it]:nr:( 1 )'
            'crunch_terrible_rating=:[crunch rating lt]:nr:( 0 )'
            'cube_debug_level=:[Print cube debug info]:nr:(0)'
            'dawg_debug_level=:[Set to 1 for general debug info, to 2 for more details, to 3 to see all the debug]:nr:( 0 )'
            'debug_acceptable_wds=:[Dump word pass/fail]:nr:( 0 )'
            'debug_file=:[File to send tprintf output todebug_file]:file:_files'
            'debug_fix_space_level=:[Contextual fixspace]:nr:( 0 )'
            'debug_noise_removal=:[Debug reassignment of small]:nr:( 0 )'
            'debug_x_ht_level=:[Reestimate]:nr:( 0 )'
            'devanagari_split_debugimage=:[Whether to create a debug image for split shirorekha process]:nr:(0)'
            'devanagari_split_debuglevel=:[Debug level for split shirorekha process]:nr:(0)'
            'disable_character_fragments=:[Do not include character fragments in the results of the]:nr:( 1 )'
            'doc_dict_certainty_threshold=:[Worst certainty for words that can be inserted into thedocument dictionary]:nr:( 2.25 )'
            'doc_dict_pending_threshold=:[Worst certainty for using pending]:nr:( 0 )'
            'docqual_excuse_outline_errs=:[Allow outline errs in unrejection]:nr:(0)'
            'edges_boxarea=:[Min area fraction of grandchild for box]:nr:( 0.875 )'
            'edges_childarea=:[Min area fraction of child outline]:nr:( 0.5 )'
            'edges_children_count_limit=:[Max holes allowed in]:nr:( 5 )'
            'edges_children_fix=:[Remove boxy parents of charlike]:nr:( 0 )'
            'edges_children_per_grandchild=:[Importance ratio for chucking]:nr:( 0 )'
            'edges_debug=:[turn on debugging for this]:nr:( 0 )'
            'edges_max_children_layers=:[Max layers of nested children inside a character]:nr:( 5 )'
            'edges_max_children_per_outline=:[Max number of children inside a character]:nr:( 0 )'
            'edges_min_nonhole=:[Min pixels for potential char in]:nr:( 2 )'
            'edges_patharea_ratio=:[Max lensq/area for acceptable child]:nr:( 0 )'
            'edges_use_new_outline_complexity=:[Use the new outline complexity]:nr:( 0 )'
            'editor_dbwin_height=:[Editor debug window]:nr:( 4 )'
            'editor_dbwin_name=:[Editor debug window nameEditorDBWin]'
            'editor_dbwin_width=:[Editor debug window]:nr:( 0 )'
            'editor_dbwin_xpos=:[Editor debug window X]:nr:( 0 )'
            'editor_dbwin_ypos=:[Editor debug window Y]:nr:( 0 )'
            'editor_debug_config_file=:[Config file to apply to single wordseditor_debug_config_file]:file:_files'
            'editor_image_blob_bb_color=:[Blob bounding box]:nr:( 4 )'
            'editor_image_menuheight=:[Add to image height for menu bar]:imh:( 50 )'
            'editor_image_text_color=:[Correct text]:nr:( 2 )'
            'editor_image_win_name=:[Editor image window nameEditorImage]'
            'editor_image_word_bb_color=:[Word bounding box]:nr:( 7 )'
            'editor_word_height=:[Word window]:nr:( 0 )'
            'editor_word_name=:[BL normalized word windowBlnWords]:word'
            'editor_word_width=:[Word window]:nr:( 5 )'
            'editor_word_xpos=:[Word window X]:nr:( 0 )'
            'editor_word_ypos=:[Word window Y]:nr:( 0 )'
            'enable_new_segsearch=:[Enable new segmentation search path]:nr:(0)'
            'enable_noise_removal=:[Remove and conditionally reassign small outlines when they confuse layout analysis, determining diacritics vs]:nr:( 1 )'
            'equationdetect_save_bi_image=:[Save input bi]:nr:( 0 )'
            'equationdetect_save_merged_image=:[Save the merged]:nr:( 0 )'
            'equationdetect_save_seed_image=:[Save the seed]:nr:( 0 )'
            'equationdetect_save_spt_image=:[Save special character]:nr:( 0 )'
            'file_type=:[Filename extension.tif]'
            'fixsp_done_mode=:[What constitues done for]:nr:( 1 )'
            'fixsp_non_noise_limit=:[How many nonnoise blbs either side]:nr:(1)'
            'fixsp_small_outlines_size=:[Small if lt xht x this]:nr:( 0.28 )'
            'force_word_assoc=:[force associator to run regardless of what enable_assoc is.This is used for CJK where component grouping is necessary]:nr:(0)'
            'fragments_debug=:[Debug character]:nr:( 0 )'
            'fragments_guide_chopper=:[Use information from fragments to guide chopping]:nr:( 0 )'
            'fx_debugfile=:[Name of debugfileFXDebug]:file:_files'
            'gapmap_big_gaps=:[xht multiplier]:nr:( 1.75 )'
            'gapmap_debug=:[Say which blocks have]:nr:( 0 )'
            'gapmap_no_isolated_quanta=:[Ensure gaps not less than 2quanta]:nr:( 0 )'
            'gapmap_use_ends=:[Use large space at start and end of]:nr:( 0 )'
            'heuristic_max_char_wh_ratio=:[max char widthtoheight ratio allowed in]:nr:( 2 )'
            'heuristic_segcost_rating_base=:[base factor for adding segmentation cost into word rating.Its a multiplying factor, the larger the value above 1, the bigger the effect of segmentation cost.]:nr:( 1.25 )'
            'heuristic_weight_rating=:[weight associated with char rating in combined cost]:nr:( 1 )'
            'heuristic_weight_seamcut=:[weight associated with seam cut in combined cost of]:nr:( 0 )'
            'heuristic_weight_width=:[weight associated with width evidence in combined cost of]:nr:( 0 )'
            'hocr_font_info=:[Add font info to hocr]:nr:( 0 )'
            'hyphen_debug_level=:[Debug level for hyphenated words]:nr:(0)'
            'il1_adaption_test=:[Dont adapt to i/I at beginning of]:nr:( 0 )'
            'include_page_breaks=:[Include page separator string in output text after each image/page]:nr:( 0 )'
            'interactive_display_mode=:[Run interactively]:nr:(0)'
            'language_model_debug_level=:[Language model debug]:nr:( 0 )'
            'language_model_fixed_length_choices_depth=:[Depth of blob choice lists to explore when fixed length dawgs are]:nr:( 3 )'
            'language_model_min_compound_length=:[Minimum length of compound]:nr:( 3 )'
            'language_model_ngram_nonmatch_score=:[Average classifier score of a nonmatching unichar.]:nr:( 0 )'
            'language_model_ngram_on=:[Turn on/off the use of character ngram]:nr:( 0 )'
            'language_model_ngram_order=:[Maximum order of the character ngram]:nr:( 8 )'
            'language_model_ngram_rating_factor=:[Factor to bring logprobs into the same range as ratings when multiplied by outline length]:nr:( 6 )'
            'language_model_ngram_scale_factor=:[Strength of the character ngram model relative to the character classifier]:nr:( 0.03 )'
            'language_model_ngram_small_prob=:[To avoid overly small denominators use this as the floor of the probability returned by the ngram model.]:nr:( 6 )'
            'language_model_ngram_space_delimited_language=:[Words are delimited by]:nr:( 1 )'
            'language_model_ngram_use_only_first_uft8_step=:[Use only the first UTF8 step of the given string when computing log probabilities]:nr:(0)'
            'language_model_penalty_case=:[Penalty for inconsistent case]:nr:( 0.1 )'
            'language_model_penalty_chartype=:[Penalty for inconsistent character type]:nr:( 0.3 )'
            'language_model_penalty_font=:[Penalty for inconsistent]:nr:( 0 )'
            'language_model_penalty_increment=:[Penalty increment]:nr:( 0.01 )'
            'language_model_penalty_non_dict_word=:[Penalty for nondictionary words]:nr:( 0.15 )'
            'language_model_penalty_non_freq_dict_word=:[Penalty for words not in the frequent word dictionary]:nr:( 0.1 )'
            'language_model_penalty_punc=:[Penalty for inconsistent punctuation]:nr:( 0.2 )'
            'language_model_penalty_script=:[Penalty for inconsistent script]:nr:( 0.5 )'
            'language_model_penalty_spacing=:[Penalty for inconsistent spacing]:nr:( 0.05 )'
            'language_model_use_sigmoidal_certainty=:[Use sigmoidal score for]:nr:( 0 )'
            'language_model_viterbi_list_max_num_prunable=:[Maximum number of prunable those for which PrunablePath is true entries in each viterbi list recorded in]:nr:( 0 )'
            'language_model_viterbi_list_max_size=:[Maximum size of viterbi lists recorded in]:nr:( 0 )'
            'load_bigram_dawg=:[Load dawg with special word bigrams]:nr:(1)'
            'load_fixed_length_dawgs=:[Load fixed length dawgs e.g. for nonspace delimited]:nr:( 1 )'
            'load_freq_dawg=:[Load frequent word dawg]:nr:(1)'
            'load_number_dawg=:[Load dawg with number patterns]:nr:(1)'
            'load_punc_dawg=:[Load dawg with punctuation patterns]:nr:(1)'
            'load_system_dawg=:[Load system word dawg.]:nr:( 1 )'
            'load_unambig_dawg=:[Load unambiguous word dawg]:nr:(1)'
            'm_data_sub_dir=:[Directory for data filestessdata]'
            'matcher_avg_noise_size=:[Avg. noise blob]:nr:( 2 )'
            'matcher_bad_match_pad=:[Bad Match Pad]:nr:( 010.15 )'
            'matcher_clustering_max_angle_delta=:[Maximum angle delta for prototype clustering]:nr:( 0.015 )'
            'matcher_debug_flags=:[Matcher Debug]:nr:( 0 )'
            'matcher_debug_level=:[Matcher Debug]:nr:( 0 )'
            'matcher_debug_separate_windows=:[Use two different windows for debugging the matching One for the protos and one for the features]:nr:(0)'
            'matcher_good_threshold=:[Good Match]:nr:( 010.125 )'
            'matcher_min_examples_for_prototyping=:[Reliable Config]:nr:( 3 )'
            'matcher_perfect_threshold=:[Perfect Match]:nr:( 010.02 )'
            'matcher_permanent_classes_min=:[Min # of permanent]:nr:( 1 )'
            'matcher_rating_margin=:[New template margin]:nr:( 010.1 )'
            'matcher_reliable_adaptive_result=:[Great Match]:nr:( 0 )'
            'matcher_sufficient_examples_for_prototyping=:[Enable adaption even if the ambiguities have not been]:nr:( 5 )'
            'max_permuter_attempts=:[Maximum number of different character choices to consider during permutation. This limit is especially useful when user patterns are specified, since overly generic patterns can result in dawg search exploring an overly large number of options.]:nr:( 0 )'
            'max_viterbi_list_size=:[Maximum size of viterbi list.]:nr:( 0 )'
            'merge_fragments_in_matrix=:[Merge the fragments in the ratings matrix and delete them after]:nr:( 1 )'
            'min_orientation_margin=:[Min acceptable orientation]:nr:( 7 )'
            'min_sane_x_ht_pixels=:[Reject any xht lt or eq than]:nr:( 8 )'
            'ngram_permuter_activated=:[Activate characterlevel ngrambased]:nr:( 0 )'
            'noise_cert_basechar=:[Hingepoint for base char]:nr:( 8 )'
            'noise_cert_disjoint=:[Hingepoint for disjoint]:nr:( 1 )'
            'noise_cert_factor=:[Scaling on certainty diff from Hingepoint]:nr:( 0.375 )'
            'noise_cert_punc=:[Threshold for new punc char]:nr:( 3 )'
            'noise_maxperblob=:[Max diacritics to apply to a]:nr:( 8 )'
            'noise_maxperword=:[Max diacritics to apply to a]:nr:( 6 )'
            'numeric_punctuation=:[Punct. chs expected WITHIN numbers]'
            'ocr_devanagari_split_strategy=:[Whether to use the topline splitting process for Devanagari documents while performing ocr]:nr:(0)'
            'ok_repeated_ch_non_alphanum_wds=:[Allow NN to unrej]'
            'oldbl_corrfix=:[Improve correlation of]:nr:( 1 )'
            'oldbl_dot_error_size=:[Max aspect ratio of a dot]:nr:( 1.26 )'
            'oldbl_holed_losscount=:[Max lost before fallback line]:nr:( 0 )'
            'oldbl_xhfix=:[Fix bug in modes threshold for]:nr:( 0 1)'
            'oldbl_xhfract=:[Fraction of est allowed in calc]:nr:( 0.4 )'
            'outlines_2=:[Non standard number of outlines]:outline:( . % \= \: \;)'
            'outlines_odd=:[Non standard number of outlines]:outline:( \% \|)'
            'output_ambig_words_file=:[Output file for ambiguities found in the dictionaryoutput_ambig_words_file]'
            'page_separator=:[Page separator default is form feed control character]:sep:( \ )'
            'pageseg_devanagari_split_strategy=:[Whether to use the topline splitting process for Devanagari documents while performing pagesegmentation]:nr:(0)'
            'paragraph_debug_level=:[Print paragraph debug info]:nr:(0)'
            'paragraph_text_based=:[Run paragraph detection on the posttextrecognition more]:nr:( 1 )'
            'permute_chartype_word=:[Turn on character type property consistency]:nr:( 0 )'
            'permute_debug=:[Debug char permutation]:nr:( 0 )'
            'permute_fixed_length_dawg=:[Turn on fixedlength phrasebook search]:nr:( 0 )'
            'permute_only_top=:[Run only the top choice]:nr:( 0 )'
            'permute_script_word=:[Turn on word script consistency]:nr:( 0 )'
            'pitsync_fake_depth=:[Max advance fake]:nr:( 1 )'
            'pitsync_joined_edge=:[Dist inside big blob for chopping]:nr:( 0.75 )'
            'pitsync_linear_version=:[Use new fast]:nr:( 6 )'
            'pitsync_offset_freecut_fraction=:[Fraction of cut for free cuts]:nr:( 0.25 )'
            'poly_allow_detailed_fx=:[Allow feature extractors to see the original]:nr:( 0 )'
            'poly_debug=:[Debug old]:nr:( 0 )'
            'poly_wide_objects_better=:[More accurate approx on wide]:nr:( 1 )'
            'preserve_interword_spaces=:[Preserve multiple interword]:nr:( 0 )'
            'prioritize_division=:[Prioritize blob division over]:nr:( 0 )'
            'quality_blob_pc=:[good_quality_doc gte good blobs]:nr:( 0 )'
            'quality_char_pc=:[good_quality_doc gte good char limit]:nr:( 0.95 )'
            'quality_min_initial_alphas_reqd=:[alphas in a good]:nr:( 2 )'
            'quality_outline_pc=:[good_quality_doc lte outline error]:nr:( 1 )'
            'quality_rej_pc=:[good_quality_doc lte rejection limit]:nr:( 0.08 )'
            'quality_rowrej_pc=:[good_quality_doc gte good char limit]:nr:( 1.1 )'
            'rating_scale=:[Rating scaling factor]:nr:( 1.5 )'
            'rej_1Il_trust_permuter_type=:[Dont double]:nr:( 1 )'
            'rej_1Il_use_dict_word=:[Use dictword]:nr:( 0 )'
            'rej_alphas_in_number_perm=:[Extend permuter]:nr:( 0 )'
            'rej_trust_doc_dawg=:[Use DOC dawg in 11l conf.]:nr:( 0 )'
            'rej_use_good_perm=:[Individual rejection]:nr:( 1 )'
            'rej_use_sensible_wd=:[Extend permuter]:nr:( 0 )'
            'rej_use_tess_accepted=:[Individual rejection]:nr:( 1 )'
            'rej_use_tess_blanks=:[Individual rejection]:nr:( 1 )'
            'rej_whole_of_mostly_reject_word_fract=:[if >this fract]:nr:( 0.85 )'
            'repair_unchopped_blobs=:[Fix blobs that arent]:nr:( 1 )'
            'save_alt_choices=:[Save alternative paths found during chopping and segmentation]:nr:( 1 )'
            'save_doc_words=:[Save Document]:nr:( 0 )'
            'save_raw_choices=:[Deprecated backward compatibility]:nr:( 0 )'
            'segment_adjust_debug=:[Segmentation adjustment]:nr:( 0 )'
            'segment_debug=:[Debug the whole segmentation]:nr:( 0 )'
            'segment_nonalphabetic_script=:[Dont use any alphabeticspecific tricks.Set to true in the traineddata config file for scripts that are cursive or inherently]:nr:( 0 )'
            'segment_penalty_dict_case_bad=:[Default score multiplier for word matches, which may have case issues lower is better.]:nr:( 1.3125 )'
            'segment_penalty_dict_case_ok=:[Score multiplier for word matches that have good case lower is better.]:nr:( 1.1 )'
            'segment_penalty_dict_frequent_word=:[Score multiplier for word matches which have good case andare frequent in the given language lower is better]:nr:(1)'
            'segment_penalty_dict_nonword=:[Score multiplier for glyph fragment segmentations which do not match a dictionary word lower is better.]:nr:( 1.25 )'
            'segment_penalty_garbage=:[Score multiplier for poorly cased strings that are not in the dictionary and generally look like garbage lower is better.]:nr:( 1.5 )'
            'segment_penalty_ngram_best_choice=:[Multipler to for the best choice from the ngram model.]:nr:( 1.24 )'
            'segment_reward_chartype=:[Score multipler for char type consistency within a word.]:nr:( 0.97 )'
            'segment_reward_ngram_best_choice=:[Score multipler for ngram permuters best choice only used in the Han script path.]:nr:( 0.99 )'
            'segment_reward_script=:[Score multipler for script consistency within a word. Being a reward factor, it should be < 1. Smaller value implies bigger reward.]:nr:( 0.95 )'
            'segment_segcost_rating=:[incorporate segmentation cost in word rating]:nr:(0)'
            'segsearch_debug_level=:[SegSearch debug]:nr:( 0 )'
            'segsearch_max_char_wh_ratio=:[Maximum character widthtoheight]:nr:( 2 )'
            'segsearch_max_fixed_pitch_char_wh_ratio=:[Maximum character widthtoheight ratio for fixedpitch]:nr:( 2 )'
            'segsearch_max_futile_classifications=:[Maximum number of pain point classifications per chunk thatdid not result in finding a better word choice.]:nr:( 0 )'
            'segsearch_max_pain_points=:[Maximum number of pain points stored in the]:nr:( 0 )'
            'speckle_large_max_size=:[Max large speckle size]:nr:( 0.3 )'
            'speckle_rating_penalty=:[Penalty to add to worst rating for]:nr:( 0 )'
            'stopper_allowable_character_badness=:[Max certaintly variation allowed in a word in]:nr:( 3 )'
            'stopper_certainty_per_char=:[Certainty to add for each dict char above small word size.]:nr:( 0.5 )'
            'stopper_debug_level=:[Stopper debug]:nr:( 0 )'
            'stopper_no_acceptable_choices=:[Make AcceptableChoice always return false. Useful when there is a need to explore all]:nr:( 0 )'
            'stopper_nondict_certainty_base=:[Certainty threshold for nondict words]:nr:( 2.5 )'
            'stopper_phase2_certainty_rejection_offset=:[Reject certainty]:nr:( 1 )'
            'stopper_smallword_size=:[Size of dict word to be treated as nondict]:nr:( 2 )'
            'stream_filelist=:[Stream a filelist from]:nr:( 0 )'
            'subscript_max_y_top=:[Maximum top of a character measured as a multiple of xheight above the baseline for us to reconsider whether its a subscript.]:nr:( 0.5 )'
            'superscript_bettered_certainty=:[What reduction in badness do we think sufficient to choose a superscript over what wed thought.  For example, a value of 0.6 means we want to reduce badness of certainty by at least 40%]:nr:( 0.97 )'
            'superscript_debug=:[Debug level for sub & superscript]:nr:( 0 )'
            'superscript_min_y_bottom=:[Minimum bottom of a character measured as a multiple of xheight above the baseline for us to reconsider whether its a superscript.]:nr:( 0.3 )'
            'superscript_scaledown_ratio=:[A superscript scaled down more than this is unbelievably small.  For example, 0.3 means we expect the font size to be no smaller than 30% of the text line font size.]:nr:( 0.4 )'
            'superscript_worse_certainty=:[How many times worse certainty does a superscript position glyph need to be for us to try classifying it as a char with a different baseline]:nr:(2)'
            'suspect_accept_rating=:[Accept good rating limit]:nr:( 999.9 )'
            'suspect_constrain_1Il=:[UNLV keep 1Il chars]:nr:( 0 )'
            'suspect_level=:[Suspect marker]:nr:( 9 )'
            'suspect_rating_per_ch=:[Dont touch bad rating limit]:nr:( 999.9 )'
            'suspect_short_words=:[Dont suspect dict wds longer than]:nr:( 2 )'
            'suspect_space_level=:[Min suspect level for rejecting]:nr:( 0 )'
            'tess_bn_matching=:[Baseline Normalized]:nr:( 0 )'
            'tess_cn_matching=:[Character Normalized]:nr:( 0 )'
            'tessdata_manager_debug_level=:[Debug level for TessdataManager functions]:nr:(0)'
            'tessedit_adaption_debug=:[Generate and print debug information for]:nr:( 0 )'
            'tessedit_ambigs_training=:[Perform training for]:nr:( 0 )'
            'tessedit_bigram_debug=:[Amount of debug output for bigram correction]:nr:(0)'
            'tessedit_certainty_threshold=:[Good blob limit]:nr:( 2.25 )'
            'tessedit_char_blacklist=:[Blacklist of chars not to recognizetessedit_char_blacklist]'
            'tessedit_char_unblacklist=:[List of chars to override tessedit_char_blacklisttessedit_char_unblacklist]'
            'tessedit_char_whitelist=:[Whitelist of chars to recognizetessedit_char_whitelist]'
            'tessedit_class_miss_scale=:[Scale factor for features not used]:nr:( 0.00390625 )'
            'tessedit_consistent_reps=:[Force all rep chars the]:nr:( 1 )'
            'tessedit_create_boxfile=:[Output text with]:nr:( 0 )'
            'tessedit_create_hocr=:[Write .html hOCR output]:nr:( 0 )'
            'tessedit_create_pdf=:[Write .pdf output]:nr:( 0 )'
            'tessedit_create_tsv=:[Write .tsv output]:nr:( 0 )'
            'tessedit_create_txt=:[Write .txt output]:nr:( 0 )'
            'tessedit_debug_block_rejection=:[Block and Row]:nr:( 0 )'
            'tessedit_debug_doc_rejection=:[Page]:nr:( 0 )'
            'tessedit_debug_fonts=:[Output font info per]:nr:( 0 )'
            'tessedit_debug_quality_metrics=:[Output data to debug]:nr:( 0 )'
            'tessedit_display_outwords=:[Draw output]:nr:( 0 )'
            'tessedit_dont_blkrej_good_wds=:[Use word segmentation quality]:nr:( 0 )'
            'tessedit_dont_rowrej_good_wds=:[Use word segmentation quality]:nr:( 0 )'
            'tessedit_dump_choices=:[Dump char]:nr:( 0 )'
            'tessedit_dump_pageseg_images=:[Dump intermediate images made during page]:nr:( 0 )'
            'tessedit_enable_bigram_correction=:[Enable correction based on the word bigram dictionary]:nr:(1)'
            'tessedit_enable_dict_correction=:[Enable single word correction based on the dictionary]:nr:(0)'
            'tessedit_enable_doc_dict=:[Add words to the document]:nr:( 1 )'
            'tessedit_fix_fuzzy_spaces=:[Try to improve fuzzy]:nr:( 1 )'
            'tessedit_fix_hyphens=:[Crunch double hyphens]:nr:(1)'
            'tessedit_flip_0O=:[Contextual 0O O0]:nr:( 1 )'
            'tessedit_good_doc_still_rowrej_wd=:[rej good doc wd if more than this fraction rejected]:nr:( 1.1 )'
            'tessedit_good_quality_unrej=:[Reduce rejection on good]:nr:( 1 )'
            'tessedit_image_border=:[Rej blbs near image edge]:nr:( 2 )'
            'tessedit_init_config_only=:[Only initialize with the config file. Useful if the instance is not going to be used for OCR but say only for layout analysis]:nr:(0)'
            'tessedit_load_sublangs=:[List of languages to load with this onetessedit_load_sublangs]'
            'tessedit_lower_flip_hyphen=:[Aspect ratio dot/hyphen test]:nr:( 1.5 )'
            'tessedit_make_boxes_from_boxes=:[Generate more boxes from boxed]:nr:( 0 )'
            'tessedit_matcher_log=:[Log matcher]:nr:( 0 )'
            'tessedit_minimal_rej_pass1=:[Do minimal rejection on pass 1]:nr:( 0 )'
            'tessedit_minimal_rejection=:[Only reject tess]:nr:( 0 )'
            'tessedit_ocr_engine_mode=:[Which OCR engines to run Tesseract, Cube, both. Defaults to loading and running only Tesseract no Cube,no combiner. Values from OcrEngineMode enum in tesseractclass.]:nr:( 0 )'
            'tessedit_ok_mode=:[Acceptance decision]:nr:( 5 )'
            'tessedit_override_permuter=:[According to]:nr:( 1 )'
            'tessedit_page_number=:[1 > All pages , else specifc page to]:nr:( 1 )'
            'tessedit_pageseg_mode=:[Page seg mode 0osd only, 1auto+osd, 2auto, 3col, 4block, 5line, 6word, 7char Values from PageSegMode enum in publictypes.]:nr:( 6 )'
            'tessedit_parallelize=:[Run in parallel where]:nr:( 0 )'
            'tessedit_prefer_joined_punct=:[Reward punctation]:nr:( 0 )'
            'tessedit_preserve_blk_rej_perfect_wds=:[Only rej partially rejected words in block]:nr:( 1 )'
            'tessedit_preserve_min_wd_len=:[Only preserve wds longer than]:nr:( 2 )'
            'tessedit_preserve_row_rej_perfect_wds=:[Only rej partially rejected words in row]:nr:( 1 )'
            'tessedit_redo_xheight=:[Check/Correct]:nr:( 1 )'
            'tessedit_reject_bad_qual_wds=:[Reject all bad quality]:nr:( 1 )'
            'tessedit_reject_block_percent=:[%rej allowed before rej whole]:nr:( 5 )'
            'tessedit_reject_doc_percent=:[%rej allowed before rej whole]:nr:( 5 )'
            'tessedit_reject_mode=:[Rejection]:nr:( 0 )'
            'tessedit_reject_row_percent=:[%rej allowed before rej whole]:nr:( 0 )'
            'tessedit_rejection_debug=:[Adaption]:nr:( 0 )'
            'tessedit_resegment_from_boxes=:[Take segmentation and labeling from box]:nr:( 0 )'
            'tessedit_resegment_from_line_boxes=:[Conversion of word/line box file to char box]:nr:( 0 )'
            'tessedit_row_rej_good_docs=:[Apply row rejection to good]:nr:( 1 )'
            'tessedit_single_match=:[Top choice only from]:nr:( 0 )'
            'tessedit_tess_adaption_mode=:[Adaptation decision algorithm for]:nr:( 9 )'
            'tessedit_test_adaption=:[Test adaption]:nr:( 0 )'
            'tessedit_test_adaption_mode=:[Adaptation decision algorithm for]:nr:( 3 )'
            'tessedit_timing_debug=:[Print timing]:nr:( 0 )'
            'tessedit_train_from_boxes=:[Generate training data from boxed]:nr:( 0 )'
            'tessedit_truncate_wordchoice_log=:[Max words to keep in]:nr:( 0 )'
            'tessedit_unrej_any_wd=:[Dont bother with word]:nr:( 0 )'
            'tessedit_upper_flip_hyphen=:[Aspect ratio dot/hyphen test]:nr:( 1.8 )'
            'tessedit_use_primary_params_model=:[In multilingual mode use params model of the primary]:nr:( 0 )'
            'tessedit_use_reject_spaces=:[Reject spaces]:nr:(1)'
            'tessedit_whole_wd_rej_row_percent=:[Number of row rejects in whole word rejectswhich prevents whole row]:nr:( 0 )'
            'tessedit_word_for_word=:[Make output have exactly one word per]:nr:( 0 )'
            'tessedit_write_block_separators=:[Write block separators in]:nr:( 0 )'
            'tessedit_write_images=:[Capture the image from the]:nr:( 0 )'
            'tessedit_write_params_to_file=:[Write all parameters to the given file.tessedit_write_params_to_file]'
            'tessedit_write_rep_codes=:[Write repetition char]:nr:( 0 )'
            'tessedit_write_unlv=:[Write .unlv output]:nr:( 0 )'
            'tessedit_zero_kelvin_rejection=:[Dont reject ANYTHING AT]:nr:( 0 )'
            'tessedit_zero_rejection=:[Dont reject]:nr:( 0 )'
            'test_pt=:[Test for]:nr:( 0 )'
            'test_pt_x=:[pt]:nr:( 0 )'
            'test_pt_y=:[pt]:nr:( 0 )'
            'textord_all_prop=:[All doc is proportial]:nr:( 0 )'
            'textord_ascheight_mode_fraction=:[Min pile height to make ascheight]:nr:( 0.08 )'
            'textord_ascx_ratio_max=:[Max cap/xheight]:nr:( 1.8 )'
            'textord_ascx_ratio_min=:[Min cap/xheight]:nr:( 1.25 )'
            'textord_balance_factor=:[Ding rate for unbalanced char]:nr:( 1 )'
            'textord_baseline_debug=:[Baseline debug]:nr:( 0 )'
            'textord_biased_skewcalc=:[Bias skew estimates with line]:nr:( 1 )'
            'textord_blob_size_bigile=:[Percentile for large]:nr:( 5 )'
            'textord_blob_size_smallile=:[Percentile for small]:nr:( 0 )'
            'textord_blockndoc_fixed=:[Attempt whole doc/block fixed]:nr:( 0 )'
            'textord_blocksall_fixed=:[Moan about prop]:nr:( 0 )'
            'textord_blocksall_prop=:[Moan about fixed pitch]:nr:( 0 )'
            'textord_blocksall_testing=:[Dump stats when]:nr:( 0 )'
            'textord_blshift_maxshift=:[Max baseline]:nr:( 0 )'
            'textord_blshift_xfraction=:[Min size of baseline shift]:nr:( 9.99 )'
            'textord_chop_width=:[Max width before chopping]:nr:( 1.5 )'
            'textord_chopper_test=:[Chopper is being tested]:nr:(0)'
            'textord_debug_baselines=:[Debug baseline]:nr:( 0 )'
            'textord_debug_blob=:[Print test blob]:nr:( 0 )'
            'textord_debug_block=:[Block to do debug]:nr:( 0 )'
            'textord_debug_bugs=:[Turn on output related to bugs in tab]:nr:( 0 )'
            'textord_debug_images=:[Use greyed image background for]:nr:( 0 )'
            'textord_debug_pitch_metric=:[Write full metric]:nr:( 0 )'
            'textord_debug_pitch_test=:[Debug on fixed pitch]:nr:( 0 )'
            'textord_debug_printable=:[Make debug windows]:nr:( 0 )'
            'textord_debug_tabfind=:[Debug tab]:nr:( 0 )'
            'textord_debug_xheights=:[Test xheight]:nr:( 0 1)'
            'textord_descheight_mode_fraction=:[Min pile height to make descheight]:nr:( 0.08 )'
            'textord_descx_ratio_max=:[Max desc/xheight]:nr:( 0.6 )'
            'textord_descx_ratio_min=:[Min desc/xheight]:nr:( 0.25 )'
            'textord_disable_pitch_test=:[Turn off dp fixed pitch]:nr:( 0 )'
            'textord_dotmatrix_gap=:[Max pixel gap for broken pixed]:nr:( 3 )'
            'textord_dump_table_images=:[Paint table detection]:nr:( 0 1)'
            'textord_equation_detect=:[Turn on equation]:nr:( 0 )'
            'textord_excess_blobsize=:[New row made if blob makes row this big]:nr:( 1.3 )'
            'textord_expansion_factor=:[Factor to expand rows by in]:nr:( 1 )'
            'textord_fast_pitch_test=:[Do even faster pitch]:nr:( 0 )'
            'textord_fix_makerow_bug=:[Prevent multiple]:nr:( 1 )'
            'textord_fix_xheight_bug=:[Use spline]:nr:( 1 )'
            'textord_force_make_prop_words=:[Force proportional word segmentation on all]:nr:( 0 )'
            'textord_fp_chop_error=:[Max allowed bending of chop]:nr:( 2 )'
            'textord_fp_chop_snap=:[Max distance of chop pt from vertex]:nr:( 0.5 )'
            'textord_fp_chopping=:[Do fixed pitch]:nr:( 1 )'
            'textord_fp_min_width=:[Min width of decent blobs]:nr:( 0.5 )'
            'textord_fpiqr_ratio=:[Pitch IQR/Gap IQR threshold]:nr:( 1.5 )'
            'textord_heavy_nr=:[Vigorously remove]:nr:( 0 )'
            'textord_initialasc_ile=:[Ile of sizes for xheight guess]:nr:( 0.9 )'
            'textord_initialx_ile=:[Ile of sizes for xheight guess]:nr:( 0.75 )'
            'textord_interpolating_skew=:[Interpolate across]:nr:( 1 0)'
            'textord_linespace_iqrlimit=:[Max iqr/median for linespace]:nr:( 0.2 )'
            'textord_lms_line_trials=:[Number of linew fits to]:nr:( 2 )'
            'textord_max_blob_overlaps=:[Max number of blobs a big blob can]:nr:( 4 )'
            'textord_max_noise_size=:[Pixel size of]:nr:( 7 )'
            'textord_max_pitch_iqr=:[Xh fraction noise in pitch]:nr:( 0.2 )'
            'textord_min_blob_height_fraction=:[Min blob height/top to include blob top into xheight stats]:nr:( 0.75 )'
            'textord_min_blobs_in_row=:[Min blobs before gradient]:nr:( 4 )'
            'textord_min_linesize=:[* blob height for initial linesize]:nr:( 1.25 )'
            'textord_min_xheight=:[Min credible pixel]:nr:( 0 )'
            'textord_minxh=:[fraction of linesize for min xheight]:nr:( 0.25 )'
            'textord_new_initial_xheight=:[Use test xheight]:nr:( 1 0)'
            'textord_no_rejects=:[Dont remove noise]:nr:( 0 )'
            'textord_noise_area_ratio=:[Fraction of bounding box for noise]:nr:( 0.7 )'
            'textord_noise_debug=:[Debug row garbage]:nr:( 0 )'
            'textord_noise_hfract=:[Height fraction to discard outlines as speckle noise]:nr:( 0.015625 )'
            'textord_noise_normratio=:[Dot to norm ratio for]:nr:( 2 )'
            'textord_noise_rejrows=:[Reject noiselike]:nr:( 1 )'
            'textord_noise_rejwords=:[Reject noiselike]:nr:( 1 )'
            'textord_noise_rowratio=:[Dot to norm ratio for]:nr:( 6 )'
            'textord_noise_sizefraction=:[Fraction of size for]:nr:( 0 )'
            'textord_noise_sizelimit=:[Fraction of x for big t count]:nr:( 0.5 )'
            'textord_noise_sncount=:[super norm blobs to save]:nr:( 1 )'
            'textord_noise_sxfract=:[xh fract width error for norm blobs]:nr:( 0.4 )'
            'textord_noise_syfract=:[xh fract height error for norm blobs]:nr:( 0.2 )'
            'textord_noise_translimit=:[Transitions for normal]:nr:( 6 )'
            'textord_occupancy_threshold=:[Fraction of neighbourhood]:nr:( 0.4 )'
            'textord_ocropus_mode=:[Make baselines for]:nr:( 0 1)'
            'textord_old_baselines=:[Use old baseline]:nr:( 1 0)'
            'textord_old_xheight=:[Use old xheight]:nr:( 0 1)'
            'textord_oldbl_debug=:[Debug old baseline]:nr:( 0 )'
            'textord_oldbl_jumplimit=:[X fraction for new partition]:nr:( 0.15 )'
            'textord_oldbl_merge_parts=:[Merge suspect]:nr:( 1 )'
            'textord_oldbl_paradef=:[Use para default]:nr:( 1 )'
            'textord_oldbl_split_splines=:[Split stepped]:nr:( 1 )'
            'textord_overlap_x=:[Fraction of linespace for good overlap]:nr:( 0.375 )'
            'textord_parallel_baselines=:[Force parallel]:nr:( 1 0)'
            'textord_pitch_cheat=:[Use correct answer for fixed/]:nr:( 0 )'
            'textord_pitch_range=:[Max range test on]:nr:( 2 )'
            'textord_pitch_rowsimilarity=:[Fraction of xheight for sameness]:nr:( 0.08 )'
            'textord_pitch_scalebigwords=:[Scale scores on big]:nr:( 0 )'
            'textord_projection_scale=:[Ding rate for midcuts]:nr:( 0.2 )'
            'textord_really_old_xheight=:[Use original wiseowl]:nr:( 0 )'
            'textord_restore_underlines=:[Chop underlines & put]:nr:( 1 )'
            'textord_show_blobs=:[Display unsorted]:nr:( 0 )'
            'textord_show_boxes=:[Display unsorted]:nr:( 0 )'
            'textord_show_expanded_rows=:[Display rows after]:nr:( 0 )'
            'textord_show_final_blobs=:[Display blob bounds after]:nr:( 0 )'
            'textord_show_final_rows=:[Display rows after final]:nr:( 0 )'
            'textord_show_fixed_cuts=:[Draw fixed pitch cell]:nr:( 0 )'
            'textord_show_fixed_words=:[Display forced fixed pitch]:nr:( 0 )'
            'textord_show_initial_rows=:[Display row]:nr:( 0 )'
            'textord_show_initial_words=:[Display separate]:nr:( 0 )'
            'textord_show_new_words=:[Display separate]:nr:( 0 )'
            'textord_show_page_cuts=:[Draw pagelevel]:nr:( 0 )'
            'textord_show_parallel_rows=:[Display page correlated]:nr:( 0 )'
            'textord_show_row_cuts=:[Draw rowlevel]:nr:( 0 )'
            'textord_show_tables=:[Show table]:nr:( 0 1)'
            'textord_single_height_mode=:[Script has no xheight, so use a single]:nr:( 0 )'
            'textord_skew_ile=:[Ile of gradients for page skew]:nr:( 0.5 )'
            'textord_skew_lag=:[Lag for skew on row accumulation]:nr:( 0.02 )'
            'textord_skewsmooth_offset2=:[For smooth]:nr:( 1 )'
            'textord_skewsmooth_offset=:[For smooth]:nr:( 4 )'
            'textord_space_size_is_variable=:[If true, word delimiter spaces are assumed to have variable width, even though characters have fixed pitch]:width:(0.0)'
            'textord_spacesize_ratiofp=:[Min ratio space/nonspace]:nr:( 2.8 )'
            'textord_spacesize_ratioprop=:[Min ratio space/]:nr:( 2 )'
            'textord_spline_medianwin=:[Size of window for spline]:nr:( 6 )'
            'textord_spline_minblobs=:[Min blobs in each spline]:nr:( 8 )'
            'textord_spline_outlier_fraction=:[Fraction of line spacing for outlier]:nr:( 0.1 )'
            'textord_spline_shift_fraction=:[Fraction of line spacing for quad]:nr:( 0.02 )'
            'textord_straight_baselines=:[Force straight]:nr:( 0 1)'
            'textord_tabfind_aligned_gap_fraction=:[Fraction of height used as a minimum gap for aligned blobs.]:nr:( 0.75 )'
            'textord_tabfind_find_tables=:[run table]:nr:( 1 )'
            'textord_tabfind_force_vertical_text=:[Force using vertical text page]:nr:( 0 )'
            'textord_tabfind_only_strokewidths=:[Only run stroke]:nr:( 0 1)'
            'textord_tabfind_show_blocks=:[Show final block]:nr:( 0 )'
            'textord_tabfind_show_color_fit=:[Show stroke]:nr:( 0 )'
            'textord_tabfind_show_columns=:[Show column]:nr:( 0 )'
            'textord_tabfind_show_finaltabs=:[Show tab]:nr:( 0 )'
            'textord_tabfind_show_images=:[Show image]:nr:( 0 )'
            'textord_tabfind_show_initial_partitions=:[Show partition]:nr:( 0 )'
            'textord_tabfind_show_initialtabs=:[Show tab]:nr:( 0 1 )'
            'textord_tabfind_show_partitions=:[Show partition bounds, waiting if >]:nr:( 0 )'
            'textord_tabfind_show_reject_blobs=:[Show blobs rejected as]:nr:( 0 )'
            'textord_tabfind_show_strokewidths=:[Show stroke]:nr:( 0 )'
            'textord_tabfind_show_vlines=:[Debug line]:nr:( 0 )'
            'textord_tabfind_vertical_horizontal_mix=:[find horizontal lines such as headers in vertical page]:nr:( 1 )'
            'textord_tabfind_vertical_text=:[Enable vertical]:nr:( 1 )'
            'textord_tabfind_vertical_text_ratio=:[Fraction of textlines deemed vertical to use vertical page mode]:nr:( 0.5 )'
            'textord_tablefind_recognize_tables=:[Enables the table recognizer for table layout and filtering]:table:( 0 1)'
            'textord_tablefind_show_mark=:[Debug table marking steps in]:nr:( 0 )'
            'textord_tablefind_show_stats=:[Show page stats used in table]:nr:( 0 1 )'
            'textord_tabvector_vertical_box_ratio=:[Fraction of box matches required to declare a line vertical]:nr:( 0.5 )'
            'textord_tabvector_vertical_gap_fraction=:[max fraction of mean blob width allowed for vertical gaps in vertical text]:nr:( 0.5 )'
            'textord_test_landscape=:[Tests refer to land]:nr:( 0 )'
            'textord_test_mode=:[Do current]:nr:( 0 )'
            'textord_test_x=:[coord of test]:nr:( 7 )'
            'textord_test_y=:[coord of test]:nr:( 7 )'
            'textord_testregion_bottom=:[Bottom edge of debug]:nr:( 7 )'
            'textord_testregion_left=:[Left edge of debug reporting]:nr:( 1 )'
            'textord_testregion_right=:[Right edge of debug]:nr:( 7 )'
            'textord_testregion_top=:[Top edge of debug reporting]:nr:( 1 )'
            'textord_underline_offset=:[Fraction of x to ignore]:nr:( 0.1 )'
            'textord_underline_threshold=:[Fraction of width occupied]:nr:( 0.5 )'
            'textord_underline_width=:[Multiple of line_size for]:nr:( 2 )'
            'textord_use_cjk_fp_model=:[Use CJK fixed pitch]:nr:( 0 )'
            'textord_width_limit=:[Max width of blobs to make]:nr:( 8 )'
            'textord_width_smooth_factor=:[Smoothing width stats]:nr:( 0.1 )'
            'textord_words_def_fixed=:[Threshold for definite fixed]:nr:( 0.016 )'
            'textord_words_def_prop=:[Threshold for definite prop]:nr:( 0.09 )'
            'textord_words_default_maxspace=:[Max believable third space]:nr:( 3.5 )'
            'textord_words_default_minspace=:[Fraction of xheight]:nr:( 0.6 )'
            'textord_words_default_nonspace=:[Fraction of xheight]:nr:( 0.2 )'
            'textord_words_definite_spread=:[Nonfuzzy spacing region]:nr:( 0.3 )'
            'textord_words_initial_lower=:[Max initial cluster size]:nr:( 0.25 )'
            'textord_words_initial_upper=:[Min initial cluster spacing]:nr:( 0.15 )'
            'textord_words_maxspace=:[Multiple of]:nr:( 4 )'
            'textord_words_min_minspace=:[Fraction of xheight]:nr:( 0.3 )'
            'textord_words_minlarge=:[Fraction of valid gaps needed]:nr:( 0.75 )'
            'textord_words_pitchsd_threshold=:[Pitch sync threshold]:nr:( 0.04 )'
            'textord_words_veto_power=:[Rows required to outvote a]:nr:( 5 )'
            'textord_words_width_ile=:[Ile of blob widths for space est]:nr:( 0.4 )'
            'textord_wordstats_smooth_factor=:[Smoothing gap stats]:nr:( 0.05 )'
            'textord_xheight_error_margin=:[Accepted variation]:nr:( 0.1 )'
            'textord_xheight_mode_fraction=:[Min pile height to make xheight]:nr:( 0.4 )'
            'tosp_all_flips_fuzzy=:[Pass ANY flip to context]:nr:(0)'
            'tosp_block_use_cert_spaces=:[Only stat OBVIOUS]:nr:( 1 )'
            'tosp_debug_level=:[Debug]:nr:( 0 )'
            'tosp_dont_fool_with_small_kerns=:[Limit use of xht gap with odd small]:nr:( 1 )'
            'tosp_enough_small_gaps=:[Fract of kerns reqd for isolated row stats]:nr:( 0.65 )'
            'tosp_enough_space_samples_for_median=:[or should we use]:nr:( 3 )'
            'tosp_few_samples=:[No.gaps reqd with 1 large gap to treat as a]:nr:( 0 )'
            'tosp_flip_caution=:[Dont autoflip kn to sp when large]:nr:( 0 )'
            'tosp_flip_fuzz_kn_to_sp=:[Default]:nr:( 1 )'
            'tosp_flip_fuzz_sp_to_kn=:[Default]:nr:( 1 )'
            'tosp_force_wordbreak_on_punct=:[Force word breaks on punct to break long lines in nonspace delimited]:nr:( 0 )'
            'tosp_fuzzy_kn_fraction=:[New fuzzy kn alg]:nr:( 0.5 )'
            'tosp_fuzzy_limit_all=:[Dont restrict kn>sp fuzzy limit to]:nr:( 1 )'
            'tosp_fuzzy_sp_fraction=:[New fuzzy sp alg]:nr:( 0.5 )'
            'tosp_fuzzy_space_factor1=:[Fract of xheight for fuzz sp]:nr:( 0.5 )'
            'tosp_fuzzy_space_factor2=:[Fract of xheight for fuzz sp]:nr:( 0.72 )'
            'tosp_fuzzy_space_factor=:[Fract of xheight for fuzz sp]:nr:( 0.6 )'
            'tosp_gap_factor=:[gap ratio to flip sp>kern]:nr:( 0.83 )'
            'tosp_ignore_big_gaps=:[xht]:nr:( 1 )'
            'tosp_ignore_very_big_gaps=:[xht multiplier]:nr:( 3.5 )'
            'tosp_improve_thresh=:[Enable improvement]:nr:( 0 )'
            'tosp_init_guess_kn_mult=:[Thresh guess  mult kn by this]:nr:( 2.2 )'
            'tosp_init_guess_xht_mult=:[Thresh guess  mult xht by this]:nr:( 0.28 )'
            'tosp_kern_gap_factor1=:[gap ratio to flip kern>]:nr:( 2 )'
            'tosp_kern_gap_factor2=:[gap ratio to flip kern>sp]:nr:( 1.3 )'
            'tosp_kern_gap_factor3=:[gap ratio to flip kern>sp]:nr:( 2.5 )'
            'tosp_large_kerning=:[Limit use of xht gap with large kns]:nr:( 0.19 )'
            'tosp_max_sane_kn_thresh=:[Multiplier on kn to limit]:nr:( 5 )'
            'tosp_min_sane_kn_sp=:[Dont trust spaces less than this time kn]:nr:( 1.5 )'
            'tosp_narrow_aspect_ratio=:[narrow if w/h less than this]:nr:( 0.48 )'
            'tosp_narrow_blobs_not_cert=:[Only stat OBVIOUS]:nr:( 1 )'
            'tosp_narrow_fraction=:[Fract of xheight for narrow]:nr:( 0.3 )'
            'tosp_near_lh_edge=:[Dont reduce box if the top left is non]:nr:( 0 )'
            'tosp_old_sp_kn_th_factor=:[Factor for defining space threshold in terms of space and kern]:nr:( 2 )'
            'tosp_old_to_bug_fix=:[Fix suspected bug in old]:nr:( 0 )'
            'tosp_old_to_constrain_sp_kn=:[Constrain relative values of inter and intraword gaps for old_to_method]:nr:(0)'
            'tosp_old_to_method=:[Space stats use prechopping]:nr:(0)'
            'tosp_only_small_gaps_for_kern=:[Better]:nr:( 0 )'
            'tosp_only_use_prop_rows=:[Block stats to use fixed pitch rows]:nr:(1)'
            'tosp_only_use_xht_gaps=:[Only use within xht gap for wd]:nr:( 0 )'
            'tosp_pass_wide_fuzz_sp_to_context=:[How wide fuzzies need context]:nr:( 0.75 )'
            'tosp_recovery_isolated_row_stats=:[Use row alone when inadequate cert]:nr:( 1 )'
            'tosp_redo_kern_limit=:[No.samples reqd to reestimate for]:nr:( 0 )'
            'tosp_rep_space=:[rep gap multiplier for space]:nr:( 1.6 )'
            'tosp_row_use_cert_spaces1=:[Only stat OBVIOUS]:nr:( 1 )'
            'tosp_row_use_cert_spaces=:[Only stat OBVIOUS]:nr:( 1 )'
            'tosp_rule_9_test_punct=:[Dont chng kn to space next to]:nr:( 0 )'
            'tosp_sanity_method=:[How to avoid being]:nr:( 1 )'
            'tosp_short_row=:[No.gaps reqd with few cert spaces to use]:nr:( 0 )'
            'tosp_silly_kn_sp_gap=:[Dont let sp minus kn get too small]:nr:( 0.2 )'
            'tosp_stats_use_xht_gaps=:[Use within xht gap for wd]:nr:( 1 )'
            'tosp_table_fuzzy_kn_sp_ratio=:[Fuzzy if less than]:nr:( 3 )'
            'tosp_table_kn_sp_ratio=:[Min difference of kn & sp in table]:nr:( 2.25 )'
            'tosp_table_xht_sp_ratio=:[Expect spaces bigger than this]:nr:( 0.33 )'
            'tosp_threshold_bias1=:[how far between kern and space]:nr:(0)'
            'tosp_threshold_bias2=:[how far between kern and space]:nr:(0)'
            'tosp_use_pre_chopping=:[Space stats use prechopping]:nr:(0)'
            'tosp_use_xht_gaps=:[Use within xht gap for wd]:nr:( 1 )'
            'tosp_wide_aspect_ratio=:[wide if w/h less than]:nr:( 0 )'
            'tosp_wide_fraction=:[Fract of xheight for wide]:nr:( 0.52 )'
            'unlv_tilde_crunching=:[Mark v.bad words for tilde]:nr:( 1 )'
            'unrecognised_char=:[Output char for unidentified blobs]'
            'use_ambigs_for_adaption=:[Use ambigs for deciding whether to adapt to a]:nr:( 0 )'
            'use_definite_ambigs_for_classifier=:[Use definite ambiguities when running character]:nr:( 0 )'
            'use_new_state_cost=:[use new state cost heuristics for segmentation state]:nr:( 0 )'
            'use_only_first_uft8_step=:[Use only the first UTF8 step of the given string when computing log probabilities]:nr:(0)'
            'user_patterns_file=:[A filename of userprovided patterns.user_patterns_file]:wp:_files'
            'user_patterns_suffix=:[A suffix of userprovided patterns located in tessdata.user_patterns_suffix]'
            'user_words_file=:[A filename of userprovided words]:name:(user_words_file)'
            'user_words_suffix=:[A suffix of userprovided words located in tessdata.user_words_suffix]:wsuf:( user-words )'
            'word_to_debug=:[Word for which stopper debug information should be printed to stdoutword_to_debug]'
            'word_to_debug_lengths=:[Lengths of unichars in word_to_debugword_to_debug_lengths]'
            'wordrec_blob_pause=:[Blob]:nr:( 0 )'
            'wordrec_debug_blamer=:[Print blamer debug]:nr:( 0 )'
            'wordrec_debug_level=:[Debug level for]:nr:( 0 )'
            'wordrec_display_all_blobs=:[Display]:nr:( 0 )'
            'wordrec_display_all_words=:[Display]:nr:( 0 )'
            'wordrec_display_segmentations=:[Display]:nr:( 0 )'
            'wordrec_display_splits=:[Display]:nr:( 0 )'
            'wordrec_enable_assoc=:[Associator]:nr:( 1 )'
            'wordrec_max_join_chunks=:[Max number of broken pieces to]:nr:( 4 )'
            'wordrec_no_block=:[Dont output block]:nr:( 0 )'
            'wordrec_run_blamer=:[Try to set the blame for]:nr:( 0 )'
            'wordrec_skip_no_truth_words=:[Only run OCR for words that had truth recorded in]:nr:( 0 )'
            'wordrec_worst_state=:[Worst segmentation]:nr:( 1 )'
            'words_default_fixed_limit=:[Allowed size variance]:nr:( 0.6 )'
            'words_default_fixed_space=:[Fraction of xheight]:nr:( 0.75 )'
            'words_default_prop_nonspace=:[Fraction of xheight]:nr:( 0.25 )'
            'words_initial_lower=:[Max initial cluster size]:nr:( 0.5 )'
            'words_initial_upper=:[Min initial cluster spacing]:nr:( 0.15 )'
            'x_ht_acceptance_tolerance=:[Max allowed deviation of blob top outside of font]:nr:( 8 )'
            'x_ht_min_change=:[Min change in xht before actually trying]:nr:( 8 )'
            'xheight_penalty_inconsistent=:[Score penalty 0.1  10% added if an xheight is inconsistent.]:nr:( 0.25 )'
            'xheight_penalty_subscripts=:[Score penalty 0.1  10% added if there are subscripts or superscripts in a word, but it is otherwise OK.]:nr:( 0.125 )'
    )
    _describe 'params ' parame
    ;;

esac

#  vim: set ts=2 sw=2 tw=0 expandtab foldenable foldmethod=syntax foldclose=all :
